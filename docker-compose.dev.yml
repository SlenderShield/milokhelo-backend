version: '3.8'

services:
  mongodb:
    image: mongo:7
    container_name: milokhelo-mongodb-dev
    restart: unless-stopped
    ports:
      - '27017:27017'
    volumes:
      - mongodb_dev_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=milokhelo_dev
    networks:
      - milokhelo-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: milokhelo-redis-dev
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    networks:
      - milokhelo-network
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 3s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: milokhelo-app-dev
    restart: unless-stopped
    ports:
      - '4000:4000'
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/milokhelo_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - EVENT_BUS_ADAPTER=redis
      - LOG_LEVEL=debug
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - milokhelo-network
    command: npm run dev

volumes:
  mongodb_dev_data:
  redis_dev_data:

networks:
  milokhelo-network:
    driver: bridge
